#include <stdio.h>
#include <pthread.h>

#define NUM_THREADS 2

// Function executed by each thread
void *thread_function(void *thread_id) {
    long tid;
    tid = (long)thread_id;
    printf("Thread %ld: Hello World!\n", tid);
    pthread_exit(NULL);
}

int main() {
    pthread_t threads[NUM_THREADS];
    int rc;
    long t;

    // Create threads
    for (t = 0; t < NUM_THREADS; t++) {
        printf("Creating thread %ld\n", t);
        rc = pthread_create(&threads[t], NULL, thread_function, (void *)t);
        if (rc) {
            printf("Error: return code from pthread_create() is %d\n", rc);
            return -1;
        }
    }

    // Wait for threads to finish
    for (t = 0; t < NUM_THREADS; t++) {
        pthread_join(threads[t], NULL);
    }

    printf("Main: All threads completed. Exiting.\n");

    pthread_exit(NULL);
    return 0;
}
