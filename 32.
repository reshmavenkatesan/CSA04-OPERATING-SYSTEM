#include <stdio.h>

// Function to find the least recently used page
int findLRU(int frame[], int n, int index[]) {
    int i, minimum = index[0], lru = 0;
    for (i = 1; i < n; ++i) {
        if (index[i] < minimum) {
            minimum = index[i];
            lru = i;
        }
    }
    return lru;
}

int main() {
    int frames, pages, i, j;
    printf("Enter the number of frames: ");
    scanf("%d", &frames);

    printf("Enter the number of pages: ");
    scanf("%d", &pages);

    int frame[frames], page[pages], index[frames];
    int pageFaults = 0;

    printf("Enter the reference string: ");
    for (i = 0; i < pages; ++i)
        scanf("%d", &page[i]);

    for (i = 0; i < frames; ++i)
        frame[i] = -1; // Initialize all frames to -1

    for (i = 0; i < pages; ++i) {
        int flag = 0; // Flag to indicate whether page is already in memory
        for (j = 0; j < frames; ++j) {
            if (frame[j] == page[i]) {
                flag = 1; // Page found in frame
                break;
            }
        }

        if (flag == 0) {
            // Page fault
            ++pageFaults;

            // Find the least recently used frame
            for (j = 0; j < frames; ++j) {
                int k;
                for (k = i - 1; k >= 0; --k) {
                    if (frame[j] == page[k]) {
                        index[j] = k;
                        break;
                    }
                    index[j] = -1;
                }
            }

            int lru = findLRU(frame, frames, index);
            frame[lru] = page[i];
        }

        printf("\nFrame Status:\n");
        for (j = 0; j < frames; ++j)
            printf("%d ", frame[j]);
    }

    printf("\nTotal Page Faults: %d\n", pageFaults);
    return 0;
}
